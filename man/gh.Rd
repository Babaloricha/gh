% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/package.R
\docType{package}
\name{gh}
\alias{gh}
\alias{gh-package}
\title{GitHub API}
\usage{
gh(endpoint, ..., .token = Sys.getenv("GITHUB_TOKEN"), .limit = NULL)
}
\arguments{
\item{endpoint}{GitHub API endpoint. See examples below.}

\item{...}{Additional parameters}

\item{.token}{Authentication token.}

\item{.limit}{Number of records to return. This can be used
instead of manual pagination. By default it is \code{NULL},
which means that the defaults of the GitHub API are used.
You can set it to a number to request more (or less)
records, and also to \code{Inf} to request all records.
Note, that if you request many records, then multiple GitHub
API calls are used to get them, and this can take a potentially
long time.}
}
\value{
Answer from the API.
}
\description{
Minimal wrapper to access GitHub's API.

This is an extremely minimal client. You need to know the API
to be able to use this client. All this function does is
\itemize{
  \item Tries to substitute each listed parameter into
    \code{endpoint}, using the \code{:parameter} notation.
  \item If a GET request (the default), then adds
    all other listed parameters as query parameters.
  \item If not a GET request, then sends the other parameters
    in the request body, as JSON.
  \item Converts the response to an R list using
    \code{jsonline::fromJSON}.
}
}
\examples{
\dontrun{
## Repositories of a user, these are equivalent
gh("/users/hadley/repos")
gh("/users/:username/repos", username = "hadley")

## Create a repository, needs a token in GITHUB_TOKEN
## environment variable
gh("POST /user/repos", name = "foobar")

## Issues of a repository
gh("/repos/hadley/dplyr/issues")
gh("/repos/:owner/:repo/issues", owner = "hadley", repo = "dplyr")

## Automatic pagination
users <- gh("/users", .limit = 50)
length(users)
}
}

