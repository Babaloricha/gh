% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gh_token.R
\name{gh_token}
\alias{gh_token}
\title{Return the local user's GitHub Personal Access Token (PAT)}
\usage{
gh_token(api_url = NULL)
}
\arguments{
\item{api_url}{Github API url. Defaults to \code{GITHUB_API_URL}
environment variable if set, otherwise \url{https://api.github.com}.}
}
\value{
A string, with the token, or a zero length string scalar,
if no token is available.
}
\description{
You can read more about PATs here:
\url{https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/}
and you can access your PATs here (if logged in to GitHub):
\url{https://github.com/settings/tokens}.
}
\details{
Set the \code{GITHUB_PAT} environment variable to avoid having to include
your PAT in the code. If you work with multiple GitHub deployments,
e.g. via GitHub Enterprise, then read on.
}
\section{}{
 PATs for multiple GitHub deployments:

gh lets you use different PATs for different GitHub API URLs, by looking
for the PAT in an URL specific environment variable first. It uses
\code{\link[=slugify_url]{slugify_url()}} to compute a suffix from the API URL, by extracting the
host name and removing the protocol and the path from it, and replacing
special characters with underscores. This suffix is added to
\code{GITHUB_PAT_} then. For example for the default API URL:
\url{https://api.github.com}, the \code{GITHUB_PAT_API_GITHUB_COM} environment
variable is consulted first.

If the API URL specific environment variable is not set, then gh falls
back to \code{GITHUB_PAT} and then to `GITHUB_TOKEN'.
}

\seealso{
\code{\link[=slugify_url]{slugify_url()}} for computing the environment variables that
gh uses to search for API URL specific PATs.
}
